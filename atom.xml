<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>不落虚`blog</title>
  
  <subtitle>do what you like</subtitle>
  <link href="http://riyuejuyjyj.github.io/atom.xml" rel="self"/>
  
  <link href="http://riyuejuyjyj.github.io/"/>
  <updated>2022-11-29T03:13:55.548Z</updated>
  <id>http://riyuejuyjyj.github.io/</id>
  
  <author>
    <name>不落虚</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>5.函数相关</title>
    <link href="http://riyuejuyjyj.github.io/posts/826f8a5f.html"/>
    <id>http://riyuejuyjyj.github.io/posts/826f8a5f.html</id>
    <published>2022-11-29T02:28:00.000Z</published>
    <updated>2022-11-29T03:13:55.548Z</updated>
    
    <content type="html"><![CDATA[<h1 id="5-函数相关"><a href="#5-函数相关" class="headerlink" title="5.函数相关"></a>5.函数相关</h1><h2 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h2><p>func 函数名(参数1 参数1类型，参数2 参数2类型) （返回类型1，返回类型 2） {</p><p>}</p><h3 id="1-正常定义"><a href="#1-正常定义" class="headerlink" title="1.正常定义"></a>1.正常定义</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sumFn1</span><span class="params">(a <span class="type">int</span>,b <span class="type">int</span>)</span></span> <span class="type">int</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a+b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> sum=sumFn1(<span class="number">1</span>,<span class="number">2</span>) <span class="comment">//调用函数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>当然当返回值为空时，参数后面不写类型即可</p></blockquote><h3 id="2-接受多个未知参数"><a href="#2-接受多个未知参数" class="headerlink" title="2.接受多个未知参数"></a>2.接受多个未知参数</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sumFn2</span>（<span class="title">a</span> ...<span class="title">int</span>）<span class="title">int</span></span>&#123;</span><br><span class="line">sum:=<span class="number">0</span></span><br><span class="line">   <span class="keyword">for</span> _,v:=<span class="keyword">range</span> a&#123;</span><br><span class="line">     sum+=v</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> v</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> sum=sumFn2(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">8</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单的理解就是1，2，3，…这些数据构成了一个切片a,但如果时这样的情况<br><strong>func sumFn2(a int,b …int)</strong>,那么a的值就是1，其余的值归为切片sliceb</p><h3 id="3-指定返回的变量"><a href="#3-指定返回的变量" class="headerlink" title="3.指定返回的变量"></a>3.指定返回的变量</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">calc1</span><span class="params">(a <span class="type">int</span>,b <span class="type">int</span>)</span></span> (sum <span class="type">int</span>,sub <span class="type">int</span>)&#123;</span><br><span class="line">  sum=a+b</span><br><span class="line">  sub=a-b</span><br><span class="line">  <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> sum,sub=sumFn1(<span class="number">1</span>,<span class="number">2</span>) <span class="comment">//调用函数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从代码中也是很好理解的我们指定了返回变量sum，sub，计算出他们的值后，我们直接return就行</p><h3 id="4-参数类型为切片"><a href="#4-参数类型为切片" class="headerlink" title="4.参数类型为切片"></a>4.参数类型为切片</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">calc2</span><span class="params">(slice_a []<span class="type">int</span>)</span></span> []<span class="type">int</span>&#123;</span><br><span class="line">    sort.Ints(slice_a) <span class="comment">//对slice_a排序</span></span><br><span class="line">    <span class="keyword">return</span> slice_a</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  slice_a:=[]<span class="type">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">89</span>,<span class="number">4</span>,<span class="number">56</span>&#125;</span><br><span class="line">  slice_a=calc1(slice_a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个也没啥好说的注意以下咋写的就行</p><h3 id="5-参数类型为map"><a href="#5-参数类型为map" class="headerlink" title="5.参数类型为map"></a>5.参数类型为map</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">calc3</span><span class="params">(map1 <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>)</span></span> &#123;</span><br><span class="line">  <span class="comment">//记录map的key值</span></span><br><span class="line">  slice_key:=[]<span class="type">string</span>&#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> k,_:= <span class="keyword">range</span> map1&#123;</span><br><span class="line">    slice_key=<span class="built_in">append</span>(slice_key,k)</span><br><span class="line">  &#125;</span><br><span class="line">  sort.Strings(slice_key)<span class="comment">//对key值进行排序</span></span><br><span class="line">  <span class="keyword">for</span> _,v:=<span class="keyword">range</span> slice_key&#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%v:%v &quot;</span>,slice_key,map1[slice_key])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  map1:=<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>&#123;</span><br><span class="line">   <span class="string">&quot;username&quot;</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line"><span class="string">&quot;password&quot;</span>: <span class="string">&quot;1234&quot;</span>,</span><br><span class="line"><span class="string">&quot;age&quot;</span>:     <span class="string">&quot;30&quot;</span>,</span><br><span class="line"><span class="string">&quot;height&quot;</span>:   <span class="string">&quot;180&quot;</span>,</span><br><span class="line"><span class="string">&quot;weight&quot;</span>:   <span class="string">&quot;50&quot;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  calc3(map1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果：age:30 height:180 password:1234 username:张三 weight:50 </span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;5-函数相关&quot;&gt;&lt;a href=&quot;#5-函数相关&quot; class=&quot;headerlink&quot; title=&quot;5.函数相关&quot;&gt;&lt;/a&gt;5.函数相关&lt;/h1&gt;&lt;h2 id=&quot;函数的定义&quot;&gt;&lt;a href=&quot;#函数的定义&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="go" scheme="http://riyuejuyjyj.github.io/categories/go/"/>
    
    
    <category term="go" scheme="http://riyuejuyjyj.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://riyuejuyjyj.github.io/posts/4a17b156.html"/>
    <id>http://riyuejuyjyj.github.io/posts/4a17b156.html</id>
    <published>2022-11-27T02:58:08.899Z</published>
    <updated>2022-11-21T00:46:21.926Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="生活" scheme="http://riyuejuyjyj.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="lifes" scheme="http://riyuejuyjyj.github.io/tags/lifes/"/>
    
  </entry>
  
  <entry>
    <title>4.map</title>
    <link href="http://riyuejuyjyj.github.io/posts/be8242ff.html"/>
    <id>http://riyuejuyjyj.github.io/posts/be8242ff.html</id>
    <published>2022-11-26T08:20:00.000Z</published>
    <updated>2022-11-29T01:20:05.028Z</updated>
    
    <content type="html"><![CDATA[<h1 id="04-map"><a href="#04-map" class="headerlink" title="04 map"></a>04 map</h1><p>map其实就像是一种映射，c里面的map，python的字典感觉</p><h2 id="map一些简单的操作"><a href="#map一些简单的操作" class="headerlink" title="map一些简单的操作"></a>map一些简单的操作</h2><p><strong>通过make函数定义</strong></p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> userinfo=<span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>) </span><br></pre></td></tr></table></figure><p>中括号里的是键，外面的是值</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//添加键值对</span></span><br><span class="line">userinfo[<span class="string">&quot;username&quot;</span>]=<span class="string">&quot;张三&quot;</span></span><br><span class="line">userinfo[<span class="string">&quot;age&quot;</span>]=<span class="string">&quot;20&quot;</span></span><br></pre></td></tr></table></figure><p>当然也可以这样定义</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> userinfo2=<span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>)&#123;</span><br><span class="line">    <span class="string">&quot;username&quot;</span>:<span class="string">&quot;zhangsan&quot;</span>,</span><br><span class="line">    <span class="string">&quot;age&quot;</span>:<span class="string">&quot;20&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>map也是引用类型数据</strong></p><p>判断某个键是否存在</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">v,ok:=userinfo[<span class="string">&quot;password&quot;</span>] <span class="comment">//v是值，ok是bool类型</span></span><br></pre></td></tr></table></figure><p>删除某个键</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="built_in">delete</span>(userinfo,<span class="string">&quot;username&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="map类型的切片"><a href="#map类型的切片" class="headerlink" title="map类型的切片"></a>map类型的切片</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> userList=<span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>][<span class="type">string</span>],<span class="number">3</span>,<span class="number">3</span>)<span class="comment">//可以理解为userList里有三个map类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> userList[<span class="number">0</span>]!=<span class="literal">nil</span>&#123;</span><br><span class="line">    userList[<span class="number">0</span>][<span class="string">&quot;username&quot;</span>]=<span class="string">&quot;张三&quot;</span>,</span><br><span class="line">    userList[<span class="number">0</span>][<span class="string">&quot;age&quot;</span>]=<span class="string">&quot;20&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> userList[<span class="number">1</span>]!=<span class="literal">nil</span>&#123;</span><br><span class="line">    userList[<span class="number">0</span>][<span class="string">&quot;username&quot;</span>]=<span class="string">&quot;李四&quot;</span>,</span><br><span class="line">    userList[<span class="number">0</span>][<span class="string">&quot;age&quot;</span>]=<span class="string">&quot;19&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/2022-11-26%20160218.jfif" alt="image"></p><h3 id="for-range-遍历"><a href="#for-range-遍历" class="headerlink" title="for range 遍历"></a>for range 遍历</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> _,v:=<span class="keyword">range</span> userList&#123;</span><br><span class="line">    <span class="keyword">for</span> k,v1:=<span class="keyword">range</span> v&#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;%v:%v&quot;</span>,k,v1)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="切片类型的map"><a href="#切片类型的map" class="headerlink" title="切片类型的map"></a>切片类型的map</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> user1=<span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span>)</span><br><span class="line">user1[<span class="string">&quot;name&quot;</span>]=[]<span class="type">string</span>&#123;</span><br><span class="line">    <span class="string">&quot;张三&quot;</span>，</span><br><span class="line">    <span class="string">&quot;李四&quot;</span>，</span><br><span class="line">&#125;</span><br><span class="line">user1[<span class="string">&quot;hobby&quot;</span>]=[]<span class="type">string</span>&#123;</span><br><span class="line">     <span class="string">&quot;sleep&quot;</span>,</span><br><span class="line">     <span class="string">&quot;code&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="forrange-遍历"><a href="#forrange-遍历" class="headerlink" title="forrange 遍历"></a>forrange 遍历</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> k,v:=<span class="keyword">range</span> user1&#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%v:&quot;</span>,k)</span><br><span class="line">    <span class="keyword">for</span> _,v1:=<span class="keyword">range</span> v&#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;%v &quot;</span>,v1)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//hobby:sleep code </span></span><br><span class="line"><span class="comment">//name:张三 李四 </span></span><br></pre></td></tr></table></figure><h2 id="统计一个句子单词出现的次数"><a href="#统计一个句子单词出现的次数" class="headerlink" title="统计一个句子单词出现的次数"></a>统计一个句子单词出现的次数</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;how do you want to do something&quot;</span></span><br><span class="line">str1:=strings.split(str,<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="keyword">var</span> map1=<span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>)</span><br><span class="line"><span class="keyword">for</span> _,v:=<span class="keyword">range</span> str&#123;</span><br><span class="line">    map1[v]++;</span><br><span class="line">&#125;</span><br><span class="line">fmt.Print(map1)</span><br><span class="line"><span class="comment">//map[do:2 how:1 something:1 to:1 want:1 you:1]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;04-map&quot;&gt;&lt;a href=&quot;#04-map&quot; class=&quot;headerlink&quot; title=&quot;04 map&quot;&gt;&lt;/a&gt;04 map&lt;/h1&gt;&lt;p&gt;map其实就像是一种映射，c里面的map，python的字典感觉&lt;/p&gt;
&lt;h2 id=&quot;map一些简单的操</summary>
      
    
    
    
    <category term="go" scheme="http://riyuejuyjyj.github.io/categories/go/"/>
    
    
    <category term="go" scheme="http://riyuejuyjyj.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>3.简单排序</title>
    <link href="http://riyuejuyjyj.github.io/posts/267e357a.html"/>
    <id>http://riyuejuyjyj.github.io/posts/267e357a.html</id>
    <published>2022-11-26T07:40:30.000Z</published>
    <updated>2022-11-26T08:48:57.039Z</updated>
    
    <content type="html"><![CDATA[<h1 id="03-选择排序，冒泡排序，sort包排序"><a href="#03-选择排序，冒泡排序，sort包排序" class="headerlink" title="03 选择排序，冒泡排序，sort包排序"></a>03 选择排序，冒泡排序，sort包排序</h1><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><p>很经典的算法，在此不再赘述原理</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> numSlice=[]<span class="type">int</span>&#123;<span class="number">9</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">4</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;<span class="built_in">len</span>(numSlice);i++&#123;</span><br><span class="line">    <span class="keyword">for</span> j:=i+<span class="number">1</span>;j&lt;<span class="built_in">len</span>(numSlice);j++&#123;</span><br><span class="line">        <span class="keyword">if</span> (numSlice[i]&gt;numSlice[j])&#123;</span><br><span class="line">            numSlice[i],numSlice[j]=numSlice[j],numSlice[i]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;<span class="built_in">len</span>(numSlice);i++&#123;</span><br><span class="line">    <span class="keyword">for</span> j:=<span class="number">0</span>;j&lt;<span class="built_in">len</span>(numSlice)<span class="number">-1</span>;j++&#123;</span><br><span class="line">        <span class="keyword">if</span> (numSlice[j]&gt;numSlice[j+<span class="number">1</span>])&#123;</span><br><span class="line">            numSlice[j],numSlice[j+<span class="number">1</span>]=numSlice[j+<span class="number">1</span>],numSlice[j]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="sort-包排序"><a href="#sort-包排序" class="headerlink" title="sort 包排序"></a>sort 包排序</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">intlist:=[]<span class="type">int</span>&#123;<span class="number">9</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">4</span>&#125;</span><br><span class="line">floatlist:=[]<span class="type">float64</span>&#123;<span class="number">5.1</span>, <span class="number">502</span>, <span class="number">5.3</span>, <span class="number">6.3</span>, <span class="number">7.8</span>&#125;</span><br><span class="line">stringlist:=[]<span class="type">string</span>&#123;<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">sort.Ints(intlist)</span><br><span class="line">sort.Float64s(floatlist)</span><br><span class="line">sort.Strings(stringlist)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fmt.Println(intlist)</span><br><span class="line">fmt.Println(floatlist)</span><br><span class="line">fmt.Println(stringlist)</span><br><span class="line">sort.Sort(sort.Reverse(sort.IntSlice(intlist))) <span class="comment">//降序排列</span></span><br><span class="line">fmt.Println(intlist)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-26%20153359.jfif" alt="image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;03-选择排序，冒泡排序，sort包排序&quot;&gt;&lt;a href=&quot;#03-选择排序，冒泡排序，sort包排序&quot; class=&quot;headerlink&quot; title=&quot;03 选择排序，冒泡排序，sort包排序&quot;&gt;&lt;/a&gt;03 选择排序，冒泡排序，sort包排序&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="go" scheme="http://riyuejuyjyj.github.io/categories/go/"/>
    
    
    <category term="go" scheme="http://riyuejuyjyj.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>03gin模板语法（下）</title>
    <link href="http://riyuejuyjyj.github.io/posts/afea9a7e.html"/>
    <id>http://riyuejuyjyj.github.io/posts/afea9a7e.html</id>
    <published>2022-11-25T20:50:00.000Z</published>
    <updated>2022-11-26T08:57:27.350Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gin03模板语法下"><a href="#gin03模板语法下" class="headerlink" title="gin03模板语法下"></a>gin03模板语法下</h1><h2 id="自定义模板函数"><a href="#自定义模板函数" class="headerlink" title="自定义模板函数"></a>自定义模板函数</h2><p>首先我们自定义一个函数,根据时间戳返回时间的函数</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">UnixToTime</span><span class="params">(timestamp <span class="type">int64</span>)</span></span> <span class="type">string</span>&#123;</span><br><span class="line">    t:=timestamp.Unix(timestamp,<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> t.Format(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们将函数与路由绑定</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r.SetFuncMap(template.FuncMap&#123;</span><br><span class="line">    <span class="string">&quot;UnixToTime&quot;</span>:UnixToTime,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>然后后台传入数据date</p><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/2022-11-26%20162957.jfif" alt="image"></p><p>然后在html页面中调用</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123;UnixToTime .date&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="定义模板文件以及加载静态资源"><a href="#定义模板文件以及加载静态资源" class="headerlink" title="定义模板文件以及加载静态资源"></a>定义模板文件以及加载静态资源</h2><p>一个大型的网页肯定会有很多html页面，而且我们也不可能每个html页面都单独写一下</p><p>定义一个模板头部</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123; define &quot;public/page_header.html&quot; &#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是头部<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br></pre></td></tr></table></figure><p>定义一个模板尾部</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123;define &quot;public/page_footer.html&quot;&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是尾部<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure><p>使用模板</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123;template &quot;public/page_header.html&quot; . &#125;&#125;</span><br></pre></td></tr></table></figure><p>**注意上面的  点. **</p><p>加载静态资源如css,js,image</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r.Static(<span class="string">&quot;/static&quot;</span>,<span class="string">&quot;./static&quot;</span>)<span class="comment">//将我们当前目录下static绑定到static路由上</span></span><br></pre></td></tr></table></figure><p>static&#x2F;css&#x2F;base.css</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    backgroud:<span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">color</span>:white;</span><br><span class="line">    <span class="attribute">text-align</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后引入该css</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/static/css/base.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样就行了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;gin03模板语法下&quot;&gt;&lt;a href=&quot;#gin03模板语法下&quot; class=&quot;headerlink&quot; title=&quot;gin03模板语法下&quot;&gt;&lt;/a&gt;gin03模板语法下&lt;/h1&gt;&lt;h2 id=&quot;自定义模板函数&quot;&gt;&lt;a href=&quot;#自定义模板函数&quot; class</summary>
      
    
    
    
    <category term="gin" scheme="http://riyuejuyjyj.github.io/categories/gin/"/>
    
    
    <category term="gin" scheme="http://riyuejuyjyj.github.io/tags/gin/"/>
    
  </entry>
  
  <entry>
    <title>2.go切片slice</title>
    <link href="http://riyuejuyjyj.github.io/posts/516d1297.html"/>
    <id>http://riyuejuyjyj.github.io/posts/516d1297.html</id>
    <published>2022-11-24T01:15:30.000Z</published>
    <updated>2022-11-24T01:39:13.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="02-切片slice"><a href="#02-切片slice" class="headerlink" title="02 切片slice"></a>02 切片slice</h1><h2 id="切片的定义"><a href="#切片的定义" class="headerlink" title="切片的定义"></a>切片的定义</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//0.数组的定义</span></span><br><span class="line"><span class="keyword">var</span> array = [...]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>&#125;</span><br><span class="line">fmt.Println(array)</span><br><span class="line"><span class="comment">//1.切片的定义,与数组的定义的区别在于 []里面为空,初始时长度为0</span></span><br><span class="line"><span class="keyword">var</span> name1 []<span class="type">int</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T-长度:%v\n&quot;</span>, name1, <span class="built_in">len</span>(name1))</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> name2 = []<span class="type">string</span>&#123;<span class="string">&quot;zhangsan&quot;</span>, <span class="string">&quot;lisi&quot;</span>, <span class="string">&quot;wangwu&quot;</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T-长度:%v\n&quot;</span>, name2, <span class="built_in">len</span>(name2))</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> name3 = []<span class="type">string</span>&#123;<span class="number">1</span>: <span class="string">&quot;zhangsan&quot;</span>, <span class="number">2</span>: <span class="string">&quot;lisi&quot;</span>, <span class="number">5</span>: <span class="string">&quot;wangwu&quot;</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T-%v-长度:%v\n&quot;</span>, name3, name3, <span class="built_in">len</span>(name3))</span><br></pre></td></tr></table></figure><blockquote><p>切片定义是若没初始化，则默认为nil</p></blockquote><h2 id="循环遍历"><a href="#循环遍历" class="headerlink" title="循环遍历"></a>循环遍历</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> strSlice = []<span class="type">string</span>&#123;<span class="string">&quot;php&quot;</span>, <span class="string">&quot;python&quot;</span>, <span class="string">&quot;java&quot;</span>, <span class="string">&quot;golang&quot;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(strSlice); i++ &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v &quot;</span>, strSlice[i])</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println()</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> strSlice &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v &quot;</span>, v)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println()</span><br></pre></td></tr></table></figure><h2 id="基于数组定义切片"><a href="#基于数组定义切片" class="headerlink" title="基于数组定义切片"></a>基于数组定义切片</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">arr1 := [<span class="number">5</span>]<span class="type">int</span>&#123;<span class="number">55</span>, <span class="number">65</span>, <span class="number">57</span>, <span class="number">58</span>, <span class="number">59</span>&#125;</span><br><span class="line">arr2 := arr1[:]</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v---%T\n&quot;</span>, arr2, arr2)</span><br><span class="line"></span><br><span class="line">c := arr1[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v---%T\n&quot;</span>, c, c)</span><br></pre></td></tr></table></figure><h2 id="切片的长度和容量"><a href="#切片的长度和容量" class="headerlink" title="切片的长度和容量"></a>切片的长度和容量</h2><p><strong>容量是指从他的第一个元素开始，到其底层数组元素末尾的个数</strong></p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">fmt.Printf(<span class="string">&quot;arr2长度：%v---容量：%v\n&quot;</span>, <span class="built_in">len</span>(arr2), <span class="built_in">cap</span>(arr2))</span><br><span class="line"><span class="comment">//容量可以理解为arr2[1:3]其底层数组是arr2[1:],那容量很明显就是4</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;arr2[1:3]长度：%v---容量：%v\n&quot;</span>, <span class="built_in">len</span>(arr2[<span class="number">1</span>:<span class="number">3</span>]), <span class="built_in">cap</span>(arr2[<span class="number">1</span>:<span class="number">3</span>]))</span><br></pre></td></tr></table></figure><h2 id="添加数据append"><a href="#添加数据append" class="headerlink" title="添加数据append"></a>添加数据append</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">arr2 = <span class="built_in">append</span>(arr2, <span class="number">58</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v---%T\n&quot;</span>, arr2, arr2)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-24%20091157.jfif" alt="image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;02-切片slice&quot;&gt;&lt;a href=&quot;#02-切片slice&quot; class=&quot;headerlink&quot; title=&quot;02 切片slice&quot;&gt;&lt;/a&gt;02 切片slice&lt;/h1&gt;&lt;h2 id=&quot;切片的定义&quot;&gt;&lt;a href=&quot;#切片的定义&quot; class=&quot;he</summary>
      
    
    
    
    <category term="go" scheme="http://riyuejuyjyj.github.io/categories/go/"/>
    
    
    <category term="go" scheme="http://riyuejuyjyj.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>02gin模板语法（上）</title>
    <link href="http://riyuejuyjyj.github.io/posts/b2dd6d15.html"/>
    <id>http://riyuejuyjyj.github.io/posts/b2dd6d15.html</id>
    <published>2022-11-24T00:32:00.000Z</published>
    <updated>2022-11-24T01:39:04.672Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gin-day02-gin模板语法（上）"><a href="#gin-day02-gin模板语法（上）" class="headerlink" title="gin day02 gin模板语法（上）"></a>gin day02 gin模板语法（上）</h1><h2 id="模板定义"><a href="#模板定义" class="headerlink" title="模板定义"></a>模板定义</h2><p>随着项目的开发我们的html文件肯定也越来越多，必然不可能直接把所有html全部放在templates目录下，那么必然会在模板目录下再新建文件夹进行分类，所以之前的模板的设置方式就不在使用了</p><p>现改为</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r.LoadHTMLGlob(<span class="string">&#x27;./templates/**/*&#x27;</span>)</span><br></pre></td></tr></table></figure><p>然后我们必须在html文件前定义其名字</p><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-24%20073044.jfif" alt="image"></p><p>我们可以看到在default目录下的index.html我们将其定义为如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123;define &quot;default/index.html&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>woshi admin news<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="模板变量的定义"><a href="#模板变量的定义" class="headerlink" title="模板变量的定义"></a>模板变量的定义</h2><p>在go语言中我们定义变量通常用var a int&#x3D;30</p><p>而在模板中我们通常用$ a:&#x3D;80</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123;$a:=80&#125;&#125; <span class="comment">&lt;!--定义变量a--&gt;</span></span><br><span class="line">&#123;&#123;$a:=.title&#125;&#125;<span class="comment">&lt;!--title是后台传过来的值--&gt;</span></span><br><span class="line">&#123;&#123;$a&#125;&#125; <span class="comment">&lt;!--输出变量a--&gt;</span></span><br></pre></td></tr></table></figure><h2 id="变量之间的比较"><a href="#变量之间的比较" class="headerlink" title="变量之间的比较"></a>变量之间的比较</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123;.score&#125;&#125; <span class="comment">&lt;!--后端传过来的score--&gt;</span></span><br><span class="line">&#123;&#123; if ge .score 60 &#125;&#125; <span class="comment">&lt;!--ge 表示&gt;=--&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;&#123;else&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>ge表示&gt;&#x3D;</li><li>gt表示&gt;</li><li>eq表示&#x3D;&#x3D;</li><li>lt表示&lt;</li><li>le表示&lt;&#x3D;</li><li>ne表示!&#x3D;</li></ul><h2 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h2><p><strong>上面代码以提到在此不赘述</strong></p><h2 id="for循环遍历"><a href="#for循环遍历" class="headerlink" title="for循环遍历"></a>for循环遍历</h2><h3 id="遍历数组"><a href="#遍历数组" class="headerlink" title="遍历数组"></a>遍历数组</h3><p>假设后端传过来一个string1</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/&quot;</span>,<span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span>&#123;</span><br><span class="line">    context.HTML(<span class="number">200</span>,<span class="string">&quot;default/index.html&quot;</span>,gin.H&#123;</span><br><span class="line">        <span class="string">&quot;string1&quot;</span>:[<span class="number">5</span>]<span class="type">string</span>&#123;<span class="string">&quot;zhangsan&quot;</span>,<span class="string">&quot;lisi&quot;</span>,<span class="string">&quot;wangwu&quot;</span>&#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>html代码如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123;range $_,$v= .string1&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;$v&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">&#123;&#123;else&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>数组中没有数据<span class="tag">&lt;/<span class="name">li</span>&gt;</span>li&gt;</span><br><span class="line">&#123;&#123;&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="遍历切片"><a href="#遍历切片" class="headerlink" title="遍历切片"></a>遍历切片</h3><p>和数组几乎一样</p><p>假设后端传过来一个slice1</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/&quot;</span>,<span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span>&#123;</span><br><span class="line">    context.HTML(<span class="number">200</span>,<span class="string">&quot;default/index.html&quot;</span>,gin.H&#123;</span><br><span class="line">        <span class="string">&quot;slice1&quot;</span>:[]<span class="type">string</span>&#123;<span class="string">&quot;zhangsan&quot;</span>,<span class="string">&quot;lisi&quot;</span>,<span class="string">&quot;wangwu&quot;</span>&#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>html代码如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123;range $_,$v= .slice1&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;$v&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">&#123;&#123;else&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>数组中没有数据<span class="tag">&lt;/<span class="name">li</span>&gt;</span>li&gt;</span><br><span class="line">&#123;&#123;&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="遍历结构体"><a href="#遍历结构体" class="headerlink" title="遍历结构体"></a>遍历结构体</h3><p>定义一个结构体,并将其传入</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Article <span class="keyword">struct</span>&#123;</span><br><span class="line">    Title <span class="type">string</span></span><br><span class="line">    Content <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line">r.GET(<span class="string">&quot;/&quot;</span>,<span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span>&#123;</span><br><span class="line">    context.HTML(<span class="number">200</span>,<span class="string">&quot;default/news.html&quot;</span>,gin.H&#123;</span><br><span class="line">        <span class="string">&quot;articles&quot;</span>:[]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line">            &amp;Article&#123;</span><br><span class="line">                <span class="string">&quot;Title&quot;</span>:<span class="string">&quot;title11&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Content&quot;</span>:<span class="string">&quot;content11&quot;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            &amp;Article&#123;</span><br><span class="line">                <span class="string">&quot;Title&quot;</span>:<span class="string">&quot;title22&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Content&quot;</span>:<span class="string">&quot;content22&quot;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>这里要注意 ，</strong></p><p>以下是html中的代码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123; range $_,$v:=.articels &#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;$v.Title&#125;&#125;--&#123;&#123;$v.Content&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">&#123;&#123;else&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>结构体没数据<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-24%20082116.jfif" alt="image"></p><h2 id="with解析结构体"><a href="#with解析结构体" class="headerlink" title="with解析结构体"></a>with解析结构体</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123; with .new_articel &#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;.Title&#125;&#125;--&#123;&#123;.Content&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-24%20082554.jfif" alt="image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;gin-day02-gin模板语法（上）&quot;&gt;&lt;a href=&quot;#gin-day02-gin模板语法（上）&quot; class=&quot;headerlink&quot; title=&quot;gin day02 gin模板语法（上）&quot;&gt;&lt;/a&gt;gin day02 gin模板语法（上）&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="gin" scheme="http://riyuejuyjyj.github.io/categories/gin/"/>
    
    
    <category term="gin" scheme="http://riyuejuyjyj.github.io/tags/gin/"/>
    
  </entry>
  
  <entry>
    <title>01.路由的创建与数据的响应</title>
    <link href="http://riyuejuyjyj.github.io/posts/c02163f6.html"/>
    <id>http://riyuejuyjyj.github.io/posts/c02163f6.html</id>
    <published>2022-11-21T09:40:00.000Z</published>
    <updated>2022-11-22T11:14:29.049Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gin-day1路由创建以及多种响应方式"><a href="#gin-day1路由创建以及多种响应方式" class="headerlink" title="gin_day1路由创建以及多种响应方式"></a>gin_day1路由创建以及多种响应方式</h1><h2 id="1-路由的创建"><a href="#1-路由的创建" class="headerlink" title="1.路由的创建"></a>1.路由的创建</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r=gin.Default()</span><br></pre></td></tr></table></figure><blockquote><p>需要导入”github.com&#x2F;gin-gonic&#x2F;gin”</p></blockquote><h2 id="2-创建模板文件夹"><a href="#2-创建模板文件夹" class="headerlink" title="2.创建模板文件夹"></a>2.创建模板文件夹</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r.LoadHTMLGlob(<span class="string">&quot;./templates/*&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="3-创建首页get响应，返回string数据"><a href="#3-创建首页get响应，返回string数据" class="headerlink" title="3.创建首页get响应，返回string数据"></a>3.创建首页get响应，返回string数据</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/&quot;</span>,<span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span>)&#123;</span><br><span class="line">    context.<span class="type">string</span>(<span class="number">200</span>,<span class="string">&quot;值:%v&quot;</span>,<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-22%20174622.jfif" alt="image-20221025224539446"><br>200 为状态码,中间是格式,后面是值</p><h2 id="4-返回json数据"><a href="#4-返回json数据" class="headerlink" title="4.返回json数据"></a>4.返回json数据</h2><h3 id="1-空接口类型json"><a href="#1-空接口类型json" class="headerlink" title="1.空接口类型json"></a>1.空接口类型json</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/json1&quot;</span>,<span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span>)&#123;</span><br><span class="line">    context.json(<span class="number">200</span>,<span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line">        <span class="string">&quot;success&quot;</span>:<span class="number">200</span></span><br><span class="line">        <span class="string">&quot;sb&quot;</span>:你</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-22%20174946.jfif" alt="image"></p><h3 id="2-返回结构体json"><a href="#2-返回结构体json" class="headerlink" title="2.返回结构体json"></a>2.返回结构体json</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Article <span class="keyword">struct</span>&#123;</span><br><span class="line">    Title <span class="type">string</span> <span class="string">`json:&quot;title&quot;`</span></span><br><span class="line">    Desc <span class="type">string</span>  <span class="string">`json:&quot;desc&quot;`</span></span><br><span class="line">    Content <span class="type">string</span> <span class="string">`json:&quot;content&quot;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-22%20175006.jfif" alt="image"><br><strong>后面是指以json数据时，返回title而不是Title</strong></p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/json2&quot;</span>,<span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span>)&#123;</span><br><span class="line">    a:=Article&#123;</span><br><span class="line">        Title:<span class="string">&quot;woshibiaoti&quot;</span>,</span><br><span class="line">        Desc:<span class="string">&quot;woshidesc&quot;</span>,</span><br><span class="line">        Content:<span class="string">&quot;woshineirong&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">   context.json(<span class="number">200</span>,a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-返回jsonp数据"><a href="#5-返回jsonp数据" class="headerlink" title="5.返回jsonp数据"></a>5.返回jsonp数据</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/jsonp&quot;</span>,<span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span>)&#123;</span><br><span class="line">    a:=Article&#123;</span><br><span class="line">        Title:<span class="string">&quot;woshibiaoti&quot;</span>,</span><br><span class="line">        Desc:<span class="string">&quot;woshidesc&quot;</span>,</span><br><span class="line">        Content:<span class="string">&quot;woshineirong&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">   context.jsonp(<span class="number">200</span>,a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-22%20175039.jfif" alt="image"><br>jsonp与json的区别在于jsonp可以加上回调函数 &#x2F;josnp?callback&#x3D;&#x3D;xxxx</p><h2 id="6-返回xml数据"><a href="#6-返回xml数据" class="headerlink" title="6.返回xml数据"></a>6.返回xml数据</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/xml&quot;</span>,<span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span>)&#123;</span><br><span class="line">    context.XML(<span class="number">200</span>,gin.H&#123;</span><br><span class="line">        <span class="string">&quot;successs&quot;</span>:<span class="number">200</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-22%20175101.jfif" alt="image"></p><h2 id="7-返回html页面"><a href="#7-返回html页面" class="headerlink" title="7.返回html页面"></a>7.返回html页面</h2><p>要返回html页面一定要设置模板文件夹</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/news&quot;</span>,<span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span>)&#123;</span><br><span class="line">    context.HTML(http.StatusOK,<span class="string">&quot;news.html&quot;</span>,gin.H&#123;</span><br><span class="line">        <span class="string">&quot;title&quot;</span>:<span class="string">&quot;woshibiaoti&quot;</span><span class="comment">//给模板html传值</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;.title&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-22%20175133.jfif" alt="image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;gin-day1路由创建以及多种响应方式&quot;&gt;&lt;a href=&quot;#gin-day1路由创建以及多种响应方式&quot; class=&quot;headerlink&quot; title=&quot;gin_day1路由创建以及多种响应方式&quot;&gt;&lt;/a&gt;gin_day1路由创建以及多种响应方式&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="gin" scheme="http://riyuejuyjyj.github.io/categories/gin/"/>
    
    
    <category term="gin" scheme="http://riyuejuyjyj.github.io/tags/gin/"/>
    
  </entry>
  
  <entry>
    <title>1.go的一些基本知识</title>
    <link href="http://riyuejuyjyj.github.io/posts/ae1af740.html"/>
    <id>http://riyuejuyjyj.github.io/posts/ae1af740.html</id>
    <published>2022-11-16T09:28:30.000Z</published>
    <updated>2022-11-22T10:12:56.795Z</updated>
    
    <content type="html"><![CDATA[<h2 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h2><div class="tip "><p>变量定义感觉很像js和c的结合</p></div><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> name <span class="type">string</span> = <span class="string">&quot;周桐&quot;</span></span><br><span class="line"><span class="keyword">var</span> age <span class="type">int</span> = <span class="number">20</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">fmt.Println(name, age)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="变量的初始化"><a href="#变量的初始化" class="headerlink" title="变量的初始化"></a>变量的初始化</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">age  <span class="type">int</span></span><br><span class="line">addr <span class="type">string</span></span><br><span class="line">)</span><br><span class="line">name = <span class="string">&quot;zhoutong&quot;</span></span><br><span class="line">age = <span class="number">20</span></span><br><span class="line">addr = <span class="string">&quot;huaikou&quot;</span></span><br><span class="line"><span class="comment">//string默认值为空，int为0</span></span><br><span class="line"><span class="comment">//在go语言中如果有未使用的变量，会报错</span></span><br><span class="line"><span class="comment">//var 定义变量，如果没有赋值，就会有其默认值</span></span><br><span class="line">fmt.Println(name, age, addr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="理解变量"><a href="#理解变量" class="headerlink" title="理解变量"></a>理解变量</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   <span class="keyword">var</span> num <span class="type">int</span> = <span class="number">20</span></span><br><span class="line">   fmt.Printf(<span class="string">&quot;num:%d,内存地址为:%p&quot;</span>, num, &amp;num)</span><br><span class="line">   num=<span class="number">30</span></span><br><span class="line">   fmt.Printf(<span class="string">&quot;num:%d,内存地址为:%p&quot;</span>, num, &amp;num)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/image-20221025224539446.jfif" alt="image-20221025224539446"></p><h2 id="变量的交换"><a href="#变量的交换" class="headerlink" title="变量的交换"></a>变量的交换</h2><blockquote><p>这里就有点像python，可以不用中间量</p></blockquote><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   <span class="keyword">var</span> a <span class="type">int</span> = <span class="number">100</span></span><br><span class="line">   <span class="keyword">var</span> b <span class="type">int</span> = <span class="number">200</span></span><br><span class="line">   fmt.Println(a, b)</span><br><span class="line">   b, a = a, b</span><br><span class="line">   fmt.Println(a, b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="匿名变量"><a href="#匿名变量" class="headerlink" title="匿名变量"></a>匿名变量</h2><blockquote><p>通过匿名变量接受不需要的参数，比较重要的知识点</p></blockquote><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">()</span></span> (<span class="type">int</span>, <span class="type">int</span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">100</span>, <span class="number">200</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   <span class="keyword">var</span> a, b <span class="type">int</span> = test()</span><br><span class="line">   fmt.Println(a, b)</span><br><span class="line">   <span class="keyword">var</span> c, _ <span class="type">int</span> = test()</span><br><span class="line">   fmt.Println(c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/image-20221025224925574.jfif" alt="image-20221025224925574"></p><h2 id="常量通过const定义"><a href="#常量通过const定义" class="headerlink" title="常量通过const定义"></a>常量通过const定义</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">const</span> name <span class="type">string</span> = <span class="string">&quot;aaa&quot;</span></span><br><span class="line">    <span class="keyword">const</span> (</span><br><span class="line">n1=<span class="number">100</span></span><br><span class="line">        n2</span><br><span class="line">        n3</span><br><span class="line">    )</span><br><span class="line">    fmt.Println(n1,n2,n3)</span><br><span class="line">fmt.Println(name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="iota的用法"><a href="#iota的用法" class="headerlink" title="iota的用法"></a>iota的用法</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   <span class="keyword">const</span> url <span class="type">string</span> = <span class="string">&quot;www.baidu.com&quot;</span></span><br><span class="line">   <span class="keyword">const</span> url1 = <span class="string">&quot;www.4399.com&quot;</span></span><br><span class="line">   <span class="keyword">const</span> (</span><br><span class="line">      a = <span class="literal">iota</span></span><br><span class="line">      b = <span class="literal">iota</span></span><br><span class="line">      c = <span class="literal">iota</span></span><br><span class="line">   )</span><br><span class="line">   <span class="keyword">const</span> (</span><br><span class="line">      d = <span class="literal">iota</span>   <span class="comment">//iota=0</span></span><br><span class="line">      e          <span class="comment">//iota=1</span></span><br><span class="line">      f          <span class="comment">//iota=2</span></span><br><span class="line">      g = <span class="string">&quot;haha&quot;</span> <span class="comment">//iota=3</span></span><br><span class="line">      h          <span class="comment">//iota=4</span></span><br><span class="line">      i          <span class="comment">//iota=5</span></span><br><span class="line">      j = <span class="literal">iota</span>   <span class="comment">//iota=6</span></span><br><span class="line">      k          <span class="comment">//iota=7</span></span><br><span class="line">   )</span><br><span class="line">   fmt.Println(a, b, c)</span><br><span class="line">   fmt.Println(d, e, f, g, h, i, j, k)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/image-20221027212558094.jfif" alt="image-20221027212558094"></p><blockquote><p>iota上下才递增，左右不递增</p></blockquote><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span>(</span><br><span class="line">    n1,n2=<span class="literal">iota</span>+<span class="number">1</span>,<span class="literal">iota</span>+<span class="number">2</span> <span class="comment">//1,2</span></span><br><span class="line">    n3,n4 <span class="comment">//2,3</span></span><br><span class="line">    n5,n6 <span class="comment">//,</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="数组的及其相关知识"><a href="#数组的及其相关知识" class="headerlink" title="数组的及其相关知识"></a>数组的及其相关知识</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><p>由于比较简单直接上结果与代码</p><ul><li>数组的长度不可变</li><li>var arr3 &#x3D; […]int{12, 223, 5, 8, 9, 4} &#x2F;&#x2F;动态推导长度，但其长度还是不可改变</li><li>常用forrange遍历数组</li></ul><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> arr1 [<span class="number">3</span>]<span class="type">int</span></span><br><span class="line"><span class="keyword">var</span> arr2 [<span class="number">4</span>]<span class="type">int</span></span><br><span class="line"><span class="keyword">var</span> strArr [<span class="number">3</span>]<span class="type">string</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;arr1:%T arr2:%T strArr:%T\n&quot;</span>, arr1, arr2, strArr)</span><br><span class="line"></span><br><span class="line">strArr[<span class="number">0</span>] = <span class="string">&quot;c&quot;</span></span><br><span class="line">strArr[<span class="number">1</span>] = <span class="string">&quot;python&quot;</span></span><br><span class="line">strArr[<span class="number">2</span>] = <span class="string">&quot;java&quot;</span></span><br><span class="line">fmt.Println(strArr) <span class="comment">//数组的长度不可改变</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> num_arr = [<span class="number">3</span>]<span class="type">int</span>&#123;<span class="number">23</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">fmt.Println(num_arr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr3 = [...]<span class="type">int</span>&#123;<span class="number">12</span>, <span class="number">223</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">4</span>&#125; <span class="comment">//动态推导长度，但其长度还是不可改变</span></span><br><span class="line">fmt.Println(<span class="built_in">len</span>(arr3))</span><br><span class="line"></span><br><span class="line">arr4 := [...]<span class="type">int</span>&#123;<span class="number">1</span>: <span class="number">5</span>, <span class="number">3</span>: <span class="number">5</span>&#125;</span><br><span class="line">fmt.Println(arr4) <span class="comment">//长度是以最大的key</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(arr3); i++ &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d &quot;</span>, arr3[i])</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println()</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> arr3 &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d &quot;</span>, v)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println()</span><br><span class="line"><span class="keyword">var</span> max = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> arr3 &#123;</span><br><span class="line"><span class="keyword">if</span> v &gt;= max &#123;</span><br><span class="line">max = v</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;arr3的最大值为:%d&quot;</span>, max)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-22%20175702.jfif" alt="image-20221027212558094"></p><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//值类型 引用类型</span></span><br><span class="line"><span class="comment">//基本数组类型和数组都是值类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span></span><br><span class="line">b := a</span><br><span class="line">a = <span class="number">20</span></span><br><span class="line">fmt.Println(a, b)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr1 = [...]<span class="type">int</span>&#123;<span class="number">12</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line"><span class="keyword">var</span> arr2 = arr1</span><br><span class="line">arr1[<span class="number">0</span>] = <span class="number">11</span></span><br><span class="line">fmt.Println(arr2)</span><br><span class="line">fmt.Println(arr1)</span><br><span class="line"></span><br><span class="line"><span class="comment">//切片</span></span><br><span class="line"><span class="keyword">var</span> arr3 = []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">var</span> arr4 = arr3 <span class="comment">//将地址赋给arr4g</span></span><br><span class="line">arr3[<span class="number">0</span>] = <span class="number">5</span></span><br><span class="line">fmt.Println(arr3)</span><br><span class="line">fmt.Println(arr4)</span><br><span class="line"></span><br><span class="line">arr := [<span class="number">2</span>][<span class="number">2</span>]<span class="type">string</span>&#123;</span><br><span class="line">&#123;<span class="string">&quot;beijing&quot;</span>, <span class="string">&quot;shanghai&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;chengdu&quot;</span>, <span class="string">&quot;shengzheng&quot;</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(arr)</span><br><span class="line"><span class="keyword">for</span> _, v1 := <span class="keyword">range</span> arr &#123;</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> v1 &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v&quot;</span>, v)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-22%20175827.jfif" alt="image-20221027212558094"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;变量定义&quot;&gt;&lt;a href=&quot;#变量定义&quot; class=&quot;headerlink&quot; title=&quot;变量定义&quot;&gt;&lt;/a&gt;变量定义&lt;/h2&gt;&lt;div class=&quot;tip &quot;&gt;&lt;p&gt;变量定义感觉很像js和c的结合&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&quot;hi</summary>
      
    
    
    
    <category term="go" scheme="http://riyuejuyjyj.github.io/categories/go/"/>
    
    
    <category term="go" scheme="http://riyuejuyjyj.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>picgo,gitee,hexo的一些问题</title>
    <link href="http://riyuejuyjyj.github.io/posts/9a9d1238.html"/>
    <id>http://riyuejuyjyj.github.io/posts/9a9d1238.html</id>
    <published>2022-11-16T09:28:30.000Z</published>
    <updated>2022-11-21T00:44:07.719Z</updated>
    
    <content type="html"><![CDATA[<h1 id="picgo与gitee生成图床时的一些问题"><a href="#picgo与gitee生成图床时的一些问题" class="headerlink" title="picgo与gitee生成图床时的一些问题"></a>picgo与gitee生成图床时的一些问题</h1><h2 id="1-picgo插件里搜索不gitee插件"><a href="#1-picgo插件里搜索不gitee插件" class="headerlink" title="1.picgo插件里搜索不gitee插件"></a>1.picgo插件里搜索不gitee插件</h2><p>搜索不到我们就本地安装<br>用命令行打开picgo.exe所在文件夹</p><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/image-20221116170557716.jfif" alt="image-20221116170557716"></p><p>输入</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm i picgo-plugin-gitee-uploader</span><br></pre></td></tr></table></figure><p>安装完成后在当前生成node_modules文件夹</p><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/image-20221116170852122.jfif" alt="image-20221116170852122"></p><p>在插件设置里右上角有个下载符号点进去进到我们生成的node_modules文件里找到picgo-plugin-gitee-uploader文件件夹安装即可</p><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/image-20221116170932208.jfif" alt="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-16%20171619.png"></p><p><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-11-16%20171619.jfif" alt="image-20221116171304869"></p><h2 id="2-上传到gitee后，有些图片hexo访问不出来"><a href="#2-上传到gitee后，有些图片hexo访问不出来" class="headerlink" title="2.上传到gitee后，有些图片hexo访问不出来"></a>2.上传到gitee后，有些图片hexo访问不出来</h2><blockquote><p>将图片格式改为jfif格式即可</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;picgo与gitee生成图床时的一些问题&quot;&gt;&lt;a href=&quot;#picgo与gitee生成图床时的一些问题&quot; class=&quot;headerlink&quot; title=&quot;picgo与gitee生成图床时的一些问题&quot;&gt;&lt;/a&gt;picgo与gitee生成图床时的一些问题&lt;/</summary>
      
    
    
    
    <category term="problems" scheme="http://riyuejuyjyj.github.io/categories/problems/"/>
    
    
    <category term="hexo,picgo,gitee" scheme="http://riyuejuyjyj.github.io/tags/hexo-picgo-gitee/"/>
    
  </entry>
  
  <entry>
    <title>day1_test_webgis_map</title>
    <link href="http://riyuejuyjyj.github.io/posts/e401234d.html"/>
    <id>http://riyuejuyjyj.github.io/posts/e401234d.html</id>
    <published>2022-11-14T23:41:30.000Z</published>
    <updated>2022-11-21T00:46:21.913Z</updated>
    
    <content type="html"><![CDATA[<h2 id="webgis-day1-地图显示"><a href="#webgis-day1-地图显示" class="headerlink" title="webgis day1.地图显示"></a>webgis day1.地图显示</h2><p>大概4个步骤</p><ul><li><p>引入资源 即通过key，和安全密钥连接高德api，</p>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="property">_AMapSecurityConfig</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">securityJsCode</span>:<span class="string">&#x27;您申请的安全密钥&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://webapi.amap.com/maps?v=2.0&amp;key=您申请的key值&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br></pre></td></tr></table></figure></li></ul><blockquote><p>此方法适用于开发模式</p></blockquote><ul><li><p>创建一个地图容器</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>定义一个变量绑定保存amap对象并绑定容器</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> map=<span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">Map</span>(<span class="string">&#x27;container&#x27;</span>);<span class="comment">//定义一个变量，保存对象</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>定义容器宽度与高度</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#container</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>完整代码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#container</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">_AMapSecurityConfig</span>=&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">securityJsCode</span>: <span class="string">&#x27;你的安全密钥&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://webapi.amap.com/maps?v=2.0&amp;key=&#123;your key&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> map=<span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">Map</span>(<span class="string">&#x27;container&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>效果如下图<br><img src="https://gitee.com/in-the-knife/pic_bed/raw/master/2022-11--16/zVVnUO.jfif" alt="image-20221115193657227"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;webgis-day1-地图显示&quot;&gt;&lt;a href=&quot;#webgis-day1-地图显示&quot; class=&quot;headerlink&quot; title=&quot;webgis day1.地图显示&quot;&gt;&lt;/a&gt;webgis day1.地图显示&lt;/h2&gt;&lt;p&gt;大概4个步骤&lt;/p&gt;
&lt;ul</summary>
      
    
    
    
    <category term="webgis" scheme="http://riyuejuyjyj.github.io/categories/webgis/"/>
    
    
    <category term="webgis" scheme="http://riyuejuyjyj.github.io/tags/webgis/"/>
    
  </entry>
  
  <entry>
    <title>技术随想</title>
    <link href="http://riyuejuyjyj.github.io/posts/dfb8a81f.html"/>
    <id>http://riyuejuyjyj.github.io/posts/dfb8a81f.html</id>
    <published>2022-11-05T14:41:42.000Z</published>
    <updated>2022-11-16T03:18:07.934Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我是技术随想</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;我是技术随想&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>test1</title>
    <link href="http://riyuejuyjyj.github.io/posts/8ab2dce2.html"/>
    <id>http://riyuejuyjyj.github.io/posts/8ab2dce2.html</id>
    <published>2022-11-05T11:20:30.000Z</published>
    <updated>2022-11-21T00:46:21.920Z</updated>
    
    <content type="html"><![CDATA[<hr><hr><h1 id="夏至"><a href="#夏至" class="headerlink" title="夏至"></a>夏至</h1><blockquote><p>一生的时间很短<br>短到不过是两颗新之间</p></blockquote><div class="tip "><p>default</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;hr&gt;
&lt;h1 id=&quot;夏至&quot;&gt;&lt;a href=&quot;#夏至&quot; class=&quot;headerlink&quot; title=&quot;夏至&quot;&gt;&lt;/a&gt;夏至&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;一生的时间很短&lt;br&gt;短到不过是两颗新之间&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div cl</summary>
      
    
    
    
    <category term="生活" scheme="http://riyuejuyjyj.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="lives" scheme="http://riyuejuyjyj.github.io/tags/lives/"/>
    
  </entry>
  
  <entry>
    <title>阳光正好</title>
    <link href="http://riyuejuyjyj.github.io/posts/9520.html"/>
    <id>http://riyuejuyjyj.github.io/posts/9520.html</id>
    <published>2022-11-05T11:20:30.000Z</published>
    <updated>2022-11-21T00:46:21.937Z</updated>
    
    <content type="html"><![CDATA[<hr><hr><h1 id="夏至"><a href="#夏至" class="headerlink" title="夏至"></a>夏至</h1><blockquote><p>一生的时间很短<br> 短到不过是两颗新之间</p></blockquote><div class="tip "><p>default</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;hr&gt;
&lt;h1 id=&quot;夏至&quot;&gt;&lt;a href=&quot;#夏至&quot; class=&quot;headerlink&quot; title=&quot;夏至&quot;&gt;&lt;/a&gt;夏至&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;一生的时间很短&lt;br&gt; 短到不过是两颗新之间&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div c</summary>
      
    
    
    
    <category term="生活" scheme="http://riyuejuyjyj.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="lives" scheme="http://riyuejuyjyj.github.io/tags/lives/"/>
    
  </entry>
  
  <entry>
    <title>女神异闻录5皇家版</title>
    <link href="http://riyuejuyjyj.github.io/posts/ea5a5fc.html"/>
    <id>http://riyuejuyjyj.github.io/posts/ea5a5fc.html</id>
    <published>2022-10-14T23:41:30.000Z</published>
    <updated>2022-11-21T00:46:21.931Z</updated>
    
    <content type="html"><![CDATA[<p>还记得第一次见到女神异闻录时还是在b站评论区，当时我记得我是在找jrpg，看见别人评论刷天下第一，而且当时看见女神两字以为可以泡女神（实际上也可以），那时后还是21年吧，P5还没上pc平台，当时就只好尝试<br>ps3模拟器运行，当时鼓捣这个模拟器弄了好久。刚进游戏时，就是伢姐的place吧，一看是回合制就被劝退了，因为当时刚玩完破晓传说，对回合制不太喜欢，其实本质上破晓传说也是另一种回合制吧。<br>总之，当时没玩了，我记得突然有一天闲着开始尝试。</p><p>没错，一玩，我就上瘾了，我自己本身就是一个从一周只放半天的高中学校毕业的普通人，当时最快乐的日子，便是和朋友一起去上网吧，是的我去玩的就是三国杀，因为没冲过钱，打的都是标准场….<br>咳咳，说歪了，唉，虽然自己的高中生活并不丰富，但还是怀念那一段日子阿。</p><p>而女神异闻录就弥补了我对高中生活的一个幻想，我可以自由的逛街，可以打台球，可以和陌生人交际，当然当怪盗也很有钱，我当时就在想如果shadow不给钱，joker改咋办呢doge</p><blockquote><p>要考试了先写这么多了</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;还记得第一次见到女神异闻录时还是在b站评论区，当时我记得我是在找jrpg，看见别人评论刷天下第一，而且当时看见女神两字以为可以泡女神（实际上也可以），那时后还是21年吧，P5还没上pc平台，当时就只好尝试&lt;br&gt;ps3模拟器运行，当时鼓捣这个模拟器弄了好久。刚进游戏时，就是</summary>
      
    
    
    
    <category term="游戏" scheme="http://riyuejuyjyj.github.io/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="games" scheme="http://riyuejuyjyj.github.io/tags/games/"/>
    
  </entry>
  
</feed>
